// For format details, see https://aka.ms/devcontainer.json. 
// For config options, see the README at: https://github.com/devcontainers/templates/tree/main/src/cpp
{
	"name": "C++",
	// have no effect on the build but are only used when creating and running the dev container from the image
	"workspaceMount": "source=${localWorkspaceFolder},target=/app,type=bind",
	"workspaceFolder": "/app", // /default path in container to open
	"build": {
		"context": "..",
		"dockerfile": "Dockerfile-ubuntu"
	},
	"onCreateCommand": "chmod +x .devcontainer/onCreateCommand.sh && ./.devcontainer/onCreateCommand.sh",
	"remoteUser": "root",
	// Features to add to the dev container, see https://containers.dev/feature
	"features": {},
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code to be installed in the devcontainer
		"vscode": {

			"extensions": [
				// Clangd: code complete, compile error, clang-format etc
				"llvm-vs-code-extensions.vscode-clangd",
				// Format all files in the workspace
				"jbockle.jbockle-format-files",
				// Cmake syntax highlighting
				"twxs.cmake",
				// Check grammar in text and Markdown
				"znck.grammarly",
				// Spelling check in code
				"streetsidesoftware.code-spell-checker",
			],
			
			"settings": {
				"clangd.path": "/usr/bin/clangd",
				"clangd.arguments": [
					"--compile-commands-dir=${workspaceFolder}",
					"-std=c++23"
				],
				"clang-format.executable": "clang-format",
				"clang-format.style": "file",
				"clang-format.fallbackStyle": "Microsoft",
				"clang-format.formatOnSave": true,
				"clang-format.formatOnType": true,
				"clang-format.arguments": [
					"-assume-filename=${workspaceFolder}/.clang-format"
				]
			}
		}
	}
}